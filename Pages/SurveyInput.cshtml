@page
@model EnergyTariffAdvisor.Pages.SurveyInputModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Household Survey Input</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <style>
        .table-responsive {
            max-height: 65vh;
        }

        .table thead th {
            position: sticky;
            top: 0;
            background: #f8f9fa;
            z-index: 2;
        }
        /* Пропорции колонок */
        .question-col {
            width: 90%;
        }

        .answer-col {
            width: 10%;
        }
    </style>
</head>
<body>
    <div class="container py-4">
        <h2 class="mb-4 text-center">Household Survey Input</h2>

        <form method="post">
            <div class="row mb-4">
                <div class="col-auto">
                    <label for="LoadId" class="form-label">Load by ID:</label>
                    <input asp-for="LoadId" type="number" class="form-control" style="width:110px;" />
                </div>
                <div class="col-auto align-self-end">
                    <button type="submit" asp-page-handler="Load" class="btn btn-primary">Load Survey</button>
                </div>
            </div>
        </form>

        <form method="post">
            <div class="table-responsive mb-3 border rounded">
                <table class="table table-striped table-bordered align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="question-col">Question</th>
                            <th class="answer-col">Answer</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var prop in Model.SurveyProperties)
                        {
                            var label = Model.QuestionLabels.ContainsKey(prop.Name) ? Model.QuestionLabels[prop.Name] : prop.Name;
                            <tr>
                                <td>
                                    <span class="text-black">@label</span>
                                    <span class="text-muted small">(@prop.Name)</span>
                                </td>
                                <td>
                                    <input name="Survey.@prop.Name"
                                           value="@(prop.GetValue(Model.Survey) ?? "")"
                                           type="@(prop.PropertyType == typeof(string) ? "text" : "number")"
                                           class="form-control form-control-sm" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="text-center">
                <button type="submit" asp-page-handler="Save" class="btn btn-success px-4">Save Survey</button>
                <button id="predictBtn" class="btn btn-primary">Make prediction</button>
                <script>
                    const featureOrder = [
                        "A1","A2a","A2b","A3","A4","A5","A7_GAS","A7_ELECT","A7_OIL","A7t_LPG","A7_COAL","A7_WOODBIO",
                        "A8_boil_more_10","A8_boil_average","A8_boil_condensing","A8_boil_new","A8_boil_unknown","A8_boil_automatic",
                        "A8_modern_storage","A8_old_storage","A8_roomheaters","A8_oil_coal_heaters","A8_wood_bio_stove","A8_openfire",
                        "A8_heatingsystem_other","A9","A10","A11","A12","A13","A14","A15","A15_GAS","A15_GASBP","A15_GASkw",
                        "A15_ELECTRICITY","A15_ELEBP","A15_ELEkw","A15_OIL","A15_OILBP","A15_OILL","A15_LPG","A15_LGPBP","A15_LPGL",
                        "A15_COAL","A15_COLBP","A15_COLkg","A15_WOOD_BIOMASS","A15_BIOBP","A15_BIOkg","A16",
                        "A17_renewa_solar","A17_renewa_photovolt","A17_renewa_groundheatpump","A17_renewa_woodbio",
                        "A17_renewa_hydropow","A17_renewa_airheatpump","A17_renewa_idont",
                        "A18_Loft","A18_Loft_thickness","A18_Cavitywall","A18_Solidwall","A18_Underfloor",
                        "A18_Draughtexclusion","A18_Doubleglazing","A18_Doubleglazingpercent","A18_Idontknow",
                        "A19","A20","A21",
                        "A22_numberfridgefreezer","A22_agefridgefreezer","A22_efficiencyfridgfreez","t1_numberfridge",
                        "A22_agefridge","A22_efficiencyfridge","t1_numberfreezer","A22_agefreezer","A22_efficiencyfreezer",
                        "t1_numberdishwasher","A22_agedishwashers","A22_efficiencydishwasher","t1_dryer","A22_agedryer","A22_efficiencydryer",
                        "t1_washingmachine","A22_agewashingmachine","A22_efficiencywashing",
                        "A23","A24","A25","A26","A27","A28","A29","A30","A31","A32","A33",
                        "A34_TVst","A34_TVlcd","A34_Tvpla","A34_Sat","A34_Cabl","A34_Freev","A34_DVD","A34_VCR","A34_PVR",
                        "A34_PC","A34_LapPC","A34_Inkj","A34_Lasr","A34_Scan","A34_Mobch","A34_Othch",
                        "A35","A36","A37"
                    ];

                    document.getElementById("predictBtn").addEventListener("click", function () {
                        let features = featureOrder.map(name => {
                            let inp = document.querySelector(`input[name="Survey.${name}"]`);
                            return inp ? parseFloat(inp.value) || 0 : 0;
                        });

                        console.log("sending features:", features);

                        // Path to FastAPI endpoint
                        fetch("http://127.0.0.1:8001/predict", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ features: features })
                        })
                        .then(response => response.json())
                        .then(data => {
                            console.log("Response:", data);
                            alert("Prediction: " + JSON.stringify(data.predictions));
                        })
                        .catch(err => {
                            console.error("Error:", err);
                            alert("Error occurred while requesting FastAPI");
                        });
                    });
                </script>
            </div>
        </form>
    </div>
</body>
</html>